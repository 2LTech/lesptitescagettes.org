@keyframes flutter {
  from {
    transform: rotateX(0);
  }
  to {
    transform: rotateX(80deg);
  }
}

@property --progress {
  initial-value: 0;
  inherits: false;
  syntax: '<number>';
}

@keyframes progress {
  from {
    --progress: 0;
  }
  to {
    --progress: 1;
  }
}

.shape {
  --shape-width: 50px;
  --shape-height: 50px;
  top: calc(-0.5 * var(--shape-height));
  left: calc(-0.5 * var(--shape-width));
  width: var(--shape-width);
  height: var(--shape-height);
  position: absolute;
  z-index: 1;
  translate: var(--x-with-unit) var(--y-with-unit);
  rotate: var(--beta-tangent-angle);
}

.container {
  --PI: 3.1415;
  --WAVE-COUNT: 2;
  --TOTAL-ANGLE: calc(var(--WAVE-COUNT) * 2 * var(--PI));
  --RADIUS-ANIMATION-ANGLE: var(--PI);
  --UNIT: 1vw;
  --r-min: 2;
  --r-max: 10;
  --delta-r: calc(var(--r-max) - var(--r-min));
  --gamma-reference-angle: calc(
    var(--progress) * var(--RADIUS-ANIMATION-ANGLE)
  );
  --r: calc(var(--r-min) + var(--delta-r) * sin(var(--gamma-reference-angle)));
  --CONTAINER-WIDTH: 100;
  --x: calc(var(--progress) * var(--CONTAINER-WIDTH));
  --ROTATION-PER-LENGTH-UNIT: calc(var(--TOTAL-ANGLE) / var(--CONTAINER-WIDTH));
  --alpha-reference-angle: calc(
    var(--ROTATION-PER-LENGTH-UNIT) * var(--x) * 1rad
  );
  --y: calc(-1 * var(--r) * sin(var(--alpha-reference-angle)));

  --x-with-unit: calc(var(--x) * var(--UNIT));
  --y-with-unit: calc(var(--y) * var(--UNIT));

  --tan: calc(
    -1 * calc(var(--r) * var(--ROTATION-PER-LENGTH-UNIT) *
          cos(var(--alpha-reference-angle)))
  );
  --beta-tangent-angle: atan(var(--tan));

  position: fixed;
  top: 100px;
  left: 0;
  width: calc(var(--CONTAINER-WIDTH) * var(--UNIT));
  animation: progress 3s linear infinite;
}

.butterfly {
  background: none;
}

.wing {
  transform-origin: center center;
  animation: flutter 200ms alternate infinite;
}
